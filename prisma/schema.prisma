// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int                      @id @default(autoincrement())
  email                   String                   @unique
  password                String
  fullName                String
  avatarUrl               String                   @db.MediumText
  BoardMembers            BoardMember[]
  BoardColumnCard         BoardColumnCard?         @relation(fields: [boardColumnCardId], references: [id])
  boardColumnCardId       Int?
  BoardColumnCardComments BoardColumnCardComment[]
}

model Board {
  id            Int           @id @default(autoincrement())
  name          String
  backgroundUrl String        @db.MediumText
  BoardMembers  BoardMember[]
  BoardColumns  BoardColumn[]
  BoardLabels   BoardLabel[]
}

model BoardColumn {
  id               Int               @id @default(autoincrement())
  name             String
  Board            Board             @relation(fields: [boardId], references: [id])
  BoardColumnCards BoardColumnCard[]
  boardId          Int
  columnIdx        Int
}

model BoardColumnCard {
  id            Int                      @id @default(autoincrement())
  cardIdx       Int
  summary       String
  description   String                   @db.LongText
  Labels        BoardLabel[]
  Members       User[]
  Comments      BoardColumnCardComment[]
  dueDate       DateTime?
  BoardColumn   BoardColumn?             @relation(fields: [boardColumnId], references: [id])
  boardColumnId Int?
}

model BoardLabel {
  id                Int              @id @default(autoincrement())
  name              String
  color             String
  Board             Board            @relation(fields: [boardId], references: [id])
  boardId           Int
  BoardColumnCard   BoardColumnCard? @relation(fields: [boardColumnCardId], references: [id])
  boardColumnCardId Int?

  @@unique([boardId, color], name: "BoardColorUnique")
  @@map("BoardLabels")
}

model BoardColumnCardComment {
  id                Int             @id @default(autoincrement())
  content           String          @db.LongText
  createdDate       DateTime
  Creator           User            @relation(fields: [creatorId], references: [id])
  creatorId         Int
  BoardColumnCard   BoardColumnCard @relation(fields: [boardColumnCardId], references: [id])
  boardColumnCardId Int
}

model BoardMember {
  Member     User      @relation(fields: [memberId], references: [id])
  memberId   Int
  memberRole BoardRole
  Board      Board     @relation(fields: [boardId], references: [id])
  boardId    Int

  @@id([memberId, boardId])
}

enum BoardRole {
  COLLABORATOR
  ADMIN
  OBSERVER
}
