// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  fullName    String
  avatarUrl   String        @db.MediumText
  BoardMember BoardMember[]
}

model Board {
  id            Int           @id @default(autoincrement())
  name          String
  backgroundUrl String        @db.MediumText
  BoardMembers  BoardMember[]
  BoardColumns  BoardColumn[]
  BoardLabels   BoardLabel[]
}

model BoardColumn {
  id               Int               @id @default(autoincrement())
  name             String
  Board            Board             @relation(fields: [boardId], references: [id])
  BoardColumnCards BoardColumnCard[]
  creator          BoardMember       @relation(fields: [creatorId], references: [id])
  boardId          Int
  columnIdx        Int
  creatorId        Int
}

model BoardColumnCard {
  id                     Int                      @id @default(autoincrement())
  cardIdx                Int
  summary                String
  description            String                   @db.LongText
  Labels                 BoardLabel[]
  Comments               BoardColumnCardComment[]
  dueDate                DateTime?
  BoardColumn            BoardColumn?             @relation(fields: [boardColumnId], references: [id])
  boardColumnId          Int?
  BoardColumnCardMembers BoardColumnCardMembers[]
}

model BoardLabel {
  id                Int              @id @default(autoincrement())
  name              String
  color             String
  Board             Board            @relation(fields: [boardId], references: [id])
  boardId           Int
  BoardColumnCard   BoardColumnCard? @relation(fields: [boardColumnCardId], references: [id])
  boardColumnCardId Int?

  @@map("BoardLabels")
}

model BoardColumnCardComment {
  id                Int             @id @default(autoincrement())
  content           String          @db.LongText
  createdDate       DateTime
  Creator           BoardMember     @relation(fields: [creatorId], references: [id])
  creatorId         Int
  BoardColumnCard   BoardColumnCard @relation(fields: [boardColumnCardId], references: [id])
  boardColumnCardId Int
}

model BoardColumnCardMembers {
  Member            BoardMember     @relation(fields: [boardMemberId], references: [id])
  boardMemberId     Int
  BoardColumnCard   BoardColumnCard @relation(fields: [boardColumnCardId], references: [id])
  boardColumnCardId Int

  @@id([boardMemberId, boardColumnCardId])
}

model BoardMember {
  id                     Int                      @id @default(autoincrement())
  User                   User                     @relation(fields: [userId], references: [id])
  userId                 Int
  memberRole             BoardRole
  Board                  Board                    @relation(fields: [boardId], references: [id])
  boardId                Int
  BoardColumnCardComment BoardColumnCardComment[]
  BoardColumnCardMembers BoardColumnCardMembers[]
  BoardColumn            BoardColumn[]

  @@unique([userId, boardId])
}

enum BoardRole {
  COLLABORATOR
  ADMIN
  OBSERVER
}
